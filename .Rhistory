knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
path <- "D:\Documents\GitHub\Version-Control-Git-and-GitHub\data"
path <- ".data"
data <- read_csv(path)
path <- ".data/OA_activitydat_20190302_BIOL3207.csv"
data <- read_csv(path)
path <- ".data\OA_activitydat_20190302_BIOL3207.csv"
path <- ".data/OA_activitydat_20190302_BIOL3207.csv"
data <- read_csv(path)
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
# Drop irrelevant columns
# Check spelling in species and treatment but also generate a summary table
# Use flextable to render the summary table in a tidy format
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
# Use ggsave to save the figure
## Write your answer here
## Add your answer here
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
# Add your code here
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
path <- ".data/OA_activitydat_20190302_BIOL3207.csv"
library(ggplot)
path <- ".data/OA_activitydat_20190302_BIOL3207.csv"
library(tidyverse)
data <- read_csv(path)
path <- "..data/OA_activitydat_20190302_BIOL3207.csv"
library(tidyverse)
data <- read_csv(path)
path <- "./data/OA_activitydat_20190302_BIOL3207.csv"
library(tidyverse)
data <- read_csv(path)
path <- "./output/data"
write_csv(data, file = path)
path <- "./data/OA_activitydat_20190302_BIOL3207.csv"
library(tidyverse)
data <- read_csv(path)
path <- "./output/data"
write_csv(data, file = path)
#path <- "./output/data"
path <- "output/data/"
write_csv(data, file = path)
#path <- "./output/data"
path <- "output/data/dt"
write_csv(data, file = path)
path <- "./output/data"
write_csv(data, file = path)
path <- "./output/data/dt"
write_csv(data, file = path)
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- filter(complete.cases(data))
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- filter(complete.cases(data))
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data
comp_data <- filter(complete.cases(data))
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
which(is.na(data))
comp_data <- filter(complete.cases(data))
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data
which(is.na(data))
comp_data <- filter(complete.cases(data))
filter(complete.cases(data))
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data
which(is.na(data))
comp_data <- filter(complete.cases(data))
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data
which(is.na(data))
comp_data <- filter(complete.cases(data))
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data
which(is.na(data))
# comp_data <- filter(complete.cases(data))
comp_data <- filter(!(is.na(data)))
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data
which(is.na(data))
comp_data <- data[complete.cases(data)]
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data
which(is.na(data))
comp_data <- data[complete.cases(data),]
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
comp_data
# Drop irrelevant columns
Sp_Tr <- subset(comp_data$species,comp_data$treatment)
# Drop irrelevant columns
Sp_Tr <- c(comp_data$species,comp_data$treatment)
# Check spelling in species and treatment but also generate a summary table
# Use flextable to render the summary table in a tidy format
# Drop irrelevant columns
Sp_Tr <- c(comp_data$species,comp_data$treatment)
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
# Use flextable to render the summary table in a tidy format
# Drop irrelevant columns
Sp_Tr <- filter(comp_data$species,comp_data$treatment)
# Drop irrelevant columns
Sp_Tr <- subset(comp_data$species,comp_data$treatment)
# Drop irrelevant columns
Sp_Tr <- subset(select(comp_data$species,comp_data$treatment))
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
# Use flextable to render the summary table in a tidy format
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
sum(Sp_Tr)
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
unique(Sp_Tr)
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
unique(Sp_Tr$species)
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
unique(Sp_Tr$species)
unique(Sp_Tr$treatment)
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
unique(Sp_Tr$species)
unique(Sp_Tr$treatment)
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
my_table <- flextable(Sp_Tr))
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
unique(Sp_Tr$species)
unique(Sp_Tr$treatment)
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
my_table <- flextable(Sp_Tr)
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
unique(Sp_Tr$species)
unique(Sp_Tr$treatment)
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
table <- flextable(Sp_Tr)
table
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
unique(Sp_Tr$species)
unique(Sp_Tr$treatment)
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
table <- flextable(Sp_Tr)%>%
add_header_row(values = c("Species",
"Cut Living Standard",
"Cut Living Standard",
"Total")) %>%
theme_booktabs() %>%
autofit(part = "all") %>%
align(align = "center", part = "all")%>%
merge_h(part = "header") %>%
merge_v(part = "header") %>%
set_caption(caption = "Table 8.1")
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
unique(Sp_Tr$species)
unique(Sp_Tr$treatment)
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
table <- flextable(Sp_Tr)%>%
add_header_row(values = c("Species", "Treatment")) %>%
theme_booktabs() %>%
autofit(part = "all") %>%
align(align = "center", part = "all")%>%
merge_h(part = "header") %>%
merge_v(part = "header") %>%
set_caption(caption = "Table 8.1")
table
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
unique(Sp_Tr$species)
unique(Sp_Tr$treatment)
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
table <- flextable(Sp_Tr)%>%
theme_booktabs() %>%
autofit(part = "all") %>%
align(align = "center", part = "all")%>%
merge_h(part = "header") %>%
merge_v(part = "header") %>%
set_caption(caption = "Table 8.1")
table
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
unique(Sp_Tr$species)
unique(Sp_Tr$treatment)
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
table <- flextable(Sp_Tr)%>%
theme_booktabs() %>%
autofit(part = "all") %>%
align(align = "center", part = "all")%>%
merge_h(part = "header") %>%
merge_v(part = "header") %>%
set_caption(caption = "Table 8.1")
table
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
comp_data
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
comp_data
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
unique(Sp_Tr$species)
unique(Sp_Tr$treatment)
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
table <- flextable(Sp_Tr)%>%
theme_booktabs() %>%
autofit(part = "all") %>%
align(align = "center", part = "all")%>%
merge_h(part = "header") %>%
merge_v(part = "header") %>%
set_caption(caption = "Table 8.1")
table
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
# Use ggsave to save the figure
## Write your answer here
## Add your answer here
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
# Add your code here
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
install.packages("pacman", repos = "http://cran.us.r-project.org")
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
comp_data
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
comp_data
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
comp_data
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
comp_data
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
# install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
path <- "./data/OA_activitydat_20190302_BIOL3207.csv"
library(tidyverse)
data <- read_csv(path)
path <- "./output/data/dt"
write_csv(data, file = path)
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
comp_data
?complete.cases
data[complete.cases(data),]
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
comp_data
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
comp_data
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
unique(Sp_Tr$species)
unique(Sp_Tr$treatment)
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
table <- flextable(Sp_Tr)%>%
theme_booktabs() %>%
autofit(part = "all") %>%
align(align = "center", part = "all")%>%
merge_h(part = "header") %>%
merge_v(part = "header") %>%
set_caption(caption = "Table 8.1")
table
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
comp_data
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
comp_data
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
# install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
#comp_data <- data[complete.cases(data),]
#comp_data
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
unique(Sp_Tr$species)
unique(Sp_Tr$treatment)
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
table <- flextable(Sp_Tr)%>%
theme_booktabs() %>%
autofit(part = "all") %>%
align(align = "center", part = "all")%>%
merge_h(part = "header") %>%
merge_v(part = "header") %>%
set_caption(caption = "Table 8.1")
table
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
# Use ggsave to save the figure
## Write your answer here
## Add your answer here
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
# Add your code here
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
comp_data
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
unique(Sp_Tr$species)
unique(Sp_Tr$treatment)
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
table <- flextable(Sp_Tr)%>%
theme_booktabs() %>%
autofit(part = "all") %>%
align(align = "center", part = "all")%>%
merge_h(part = "header") %>%
merge_v(part = "header") %>%
set_caption(caption = "Table 8.1")
table
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
# install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
comp_data <- data[complete.cases(data),]
comp_data
# Drop irrelevant columns
Sp_Tr <- subset(comp_data,select=c("species","treatment"))
Sp_Tr
# Check spelling in species and treatment but also generate a summary table
unique(Sp_Tr$species)
unique(Sp_Tr$treatment)
summary(Sp_Tr)
# Use flextable to render the summary table in a tidy format
table <- flextable(Sp_Tr)%>%
theme_booktabs() %>%
autofit(part = "all") %>%
align(align = "center", part = "all")%>%
merge_h(part = "header") %>%
merge_v(part = "header") %>%
set_caption(caption = "Table 8.1")
table
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
# Use ggsave to save the figure
## Write your answer here
## Add your answer here
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
# Add your code here
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
#install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data <- na.omit(data)
# Drop irrelevant columns
new_data <- subset(data, select = -c(comment, loc))
new_data
# Check spelling in species and treatment but also generate a summary table
summary(new_data)
# Use flextable to render the summary table in a tidy format
flextable(new_data)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
# Use ggsave to save the figure
## Write your answer here
## Add your answer here
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
# Add your code here
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
GitHub is not a automate backup system, when we want to back up somthing, we need to upload it by myself. But for most back up system, like icloud, it will automatly backup my file.
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
#install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
GitHub is not a automate backup system, when we want to back up somthing, we need to upload it by myself. But for most back up system, like icloud, it will automatly backup my file.
GitHub is not a automate backup system, when we want to back up somthing, we need to upload it by myself. But for most back up system, like icloud, it will automatly backup my file.
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
#install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data <- na.omit(data)
# Drop irrelevant columns
new_data <- subset(data, select = -c(comment, loc))
new_data
# Check spelling in species and treatment but also generate a summary table
summary(new_data)
# Use flextable to render the summary table in a tidy format
flextable(new_data)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
# Use ggsave to save the figure
## Write your answer here
## Add your answer here
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
# Add your code here
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
